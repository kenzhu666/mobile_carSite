{"remainingRequest":"/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kenzhu/Desktop/coding/car/mobile_car/src/components/sellform/simple.vue?vue&type=template&id=088ecf6b&scoped=true&","dependencies":[{"path":"/Users/kenzhu/Desktop/coding/car/mobile_car/src/components/sellform/simple.vue","mtime":1562971945558},{"path":"/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1560155424582},{"path":"/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1560155425215},{"path":"/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1560155424582},{"path":"/Users/kenzhu/Desktop/coding/car/mobile_car/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1560155425215}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"all\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.saveCar($event)\n          }\n        }\n      },\n      [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_brand,\n              expression: \"car_brand\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"brand\" },\n          domProps: { value: _vm.car_brand },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_brand = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_year,\n              expression: \"car_year\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"year\" },\n          domProps: { value: _vm.car_year },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_year = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_id,\n              expression: \"car_id\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"id\" },\n          domProps: { value: _vm.car_id },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_id = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_Vin,\n              expression: \"car_Vin\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"VIN\" },\n          domProps: { value: _vm.car_Vin },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_Vin = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_automode,\n              expression: \"car_automode\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"auto\" },\n          domProps: { value: _vm.car_automode },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_automode = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_engine,\n              expression: \"car_engine\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"engine\" },\n          domProps: { value: _vm.car_engine },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_engine = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_fpay,\n              expression: \"car_fpay\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"fpay\" },\n          domProps: { value: _vm.car_fpay },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_fpay = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_gas,\n              expression: \"car_gas\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"gas\" },\n          domProps: { value: _vm.car_gas },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_gas = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_mile,\n              expression: \"car_mile\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"mile\" },\n          domProps: { value: _vm.car_mile },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_mile = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_month,\n              expression: \"car_month\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"month\" },\n          domProps: { value: _vm.car_month },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_month = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_mpay,\n              expression: \"car_mpay\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"mpay\" },\n          domProps: { value: _vm.car_mpay },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_mpay = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_seats,\n              expression: \"car_seats\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"seats\" },\n          domProps: { value: _vm.car_seats },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_seats = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.car_type,\n              expression: \"car_type\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"type\" },\n          domProps: { value: _vm.car_type },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.car_type = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact_location,\n              expression: \"contact_location\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"location\" },\n          domProps: { value: _vm.contact_location },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.contact_location = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact_name,\n              expression: \"contact_name\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"name\" },\n          domProps: { value: _vm.contact_name },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.contact_name = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact_phone,\n              expression: \"contact_phone\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"phone\" },\n          domProps: { value: _vm.contact_phone },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.contact_phone = $event.target.value\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact_time,\n              expression: \"contact_time\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"time\" },\n          domProps: { value: _vm.contact_time },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.contact_time = $event.target.value\n            }\n          }\n        }),\n        _c(\"button\", { attrs: { type: \"submit\" } }, [_vm._v(\"submit\")]),\n        _c(\"router-link\", { attrs: { to: \"/\" } }, [_vm._v(\"cancel\")])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}